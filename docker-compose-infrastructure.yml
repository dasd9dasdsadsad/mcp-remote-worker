version: '3.8'

services:
  nats:
    image: nats:2.10-alpine
    container_name: nats
    ports:
      - "4222:4222"     # Client connections
      - "8222:8222"     # HTTP monitoring
      - "6222:6222"     # Cluster routing (for future clustering)
    command: 
      - "-js"           # Enable JetStream
      - "-m"
      - "8222"          # Enable monitoring
      - "--max_payload"
      - "10485760"      # 10MB max payload
      - "--max_connections"
      - "10000"
    restart: unless-stopped
    networks:
      - mcp-network
    volumes:
      - nats-data:/data
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://localhost:8222/healthz"]
      interval: 10s
      timeout: 5s
      retries: 3

  redis:
    image: redis:7-alpine
    container_name: redis
    ports:
      - "6379:6379"
    command: >
      redis-server 
      --requirepass ${REDIS_PASSWORD:-changeme}
      --maxmemory 2gb
      --maxmemory-policy allkeys-lru
      --appendonly yes
    restart: unless-stopped
    volumes:
      - redis-data:/data
    networks:
      - mcp-network
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3

  postgres:
    image: postgres:16-alpine
    container_name: postgres
    environment:
      POSTGRES_DB: mcp_manager
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-changeme}
      POSTGRES_MAX_CONNECTIONS: 200
      PGDATA: /var/lib/postgresql/data/pgdata
    ports:
      - "5432:5432"
    restart: unless-stopped
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - mcp-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 3

  # Optional: Monitoring with Prometheus + Grafana
  # prometheus:
  #   image: prom/prometheus:latest
  #   container_name: prometheus
  #   ports:
  #     - "9090:9090"
  #   volumes:
  #     - ./prometheus.yml:/etc/prometheus/prometheus.yml
  #     - prometheus-data:/prometheus
  #   command:
  #     - '--config.file=/etc/prometheus/prometheus.yml'
  #     - '--storage.tsdb.path=/prometheus'
  #   restart: unless-stopped
  #   networks:
  #     - mcp-network

  # grafana:
  #   image: grafana/grafana:latest
  #   container_name: grafana
  #   ports:
  #     - "3001:3000"
  #   environment:
  #     - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD:-admin}
  #   volumes:
  #     - grafana-data:/var/lib/grafana
  #   restart: unless-stopped
  #   networks:
  #     - mcp-network

volumes:
  nats-data:
    driver: local
  redis-data:
    driver: local
  postgres-data:
    driver: local
  # prometheus-data:
  #   driver: local
  # grafana-data:
  #   driver: local

networks:
  mcp-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.25.0.0/16

